/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Clases.Interfaz;
import java.awt.*;    
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

/**
 *
 * @author Grupo 1 - LP2
 */
public class MainAplicacion extends javax.swing.JFrame {

    
    /**
     * Utilizamos un CardLayout para cambiar entre las distintas ventanas de la aplicaci√≥n.
     */
    private CardLayout cardLayout;

    
    private JMenuBar menuBar;
    private JButton inicioBoton;
    private VentanaAcercaDelSistema ventanaAcercaDelSistema; // Campo para guardar referencia a la ventana de acerca del sistema que funciona en otro hilo.
    


    /**
     * Creates new form MainAplicacion
     */
    public MainAplicacion() {
        initComponents();
        
        crearBarraDeMenu();
        
        cardLayout = new CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add your JPanels to the CardLayout
        getContentPane().add("MenuPrincipal", new MenuPrincipal(this));
        getContentPane().add("Transferencias", new Transferencias(this));
        getContentPane().add("PagoServicios", new PagoServicios(this));
        getContentPane().add("PagoTC", new PagoTC(this));
    }
    
    
    private void crearBarraDeMenu() {
        menuBar = new JMenuBar();
        setJMenuBar(menuBar);

        // Crear el boton de menu "Inicio"
        inicioBoton = new JButton("Inicio");
             
        // Agregar evento al boton para cambiar al menu principal cuando se presiona
        inicioBoton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cambiarAVentana("MenuPrincipal");
            }
        });

        // Crear el boton de menu "Acerca del Sistema"
        JButton acercaDelSistemaBoton = new JButton("Acerca del Sistema");
        
        // Agregar evento al boton para abrir ventana de acerca del sistema en un hilo distinto cuando se presiona
        acercaDelSistemaBoton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                abrirVentanaAcercaDelSistemaEnNuevoHilo();
            }
        });
        
        // Agregar los elementos del menu a la barra de menu
        menuBar.add(inicioBoton);
        menuBar.add(acercaDelSistemaBoton);
        
        mostrarInicioMenu(false);
    }
    
    
    public CardLayout getCardLayout() {
        return cardLayout;
    }
    
    // Method to switch to a specific panel
    public void cambiarAVentana(String panelName) {
        cardLayout.show(getContentPane(), panelName);
    }
    
    public void mostrarSolicitudDePinDeTransaccion() {
        SolicitudPinDeTransaccion dialogoPin = new SolicitudPinDeTransaccion(this, true);
        dialogoPin.setLocationRelativeTo(this); // Center the dialog on the frame
        dialogoPin.setVisible(true);
    }
       
    public void mostrarInicioMenu(boolean mostrar) {
        inicioBoton.setVisible(mostrar);
    }

    private void abrirVentanaAcercaDelSistemaEnNuevoHilo() {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                if (ventanaAcercaDelSistema == null || !ventanaAcercaDelSistema.isVisible()) {
                    // Crear una nueva ventana solo si no esta abierta
                    ventanaAcercaDelSistema = new VentanaAcercaDelSistema();
                    ventanaAcercaDelSistema.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    ventanaAcercaDelSistema.setVisible(true);
                    ventanaAcercaDelSistema.setLocationRelativeTo(MainAplicacion.this);
                } else {
                    // Si la ventana ya esta abierta, traerla al frente y enfocarla.
                    if (ventanaAcercaDelSistema.getState() == JFrame.ICONIFIED) {
                        // Si la ventana esta minimizada, maximizarla
                        ventanaAcercaDelSistema.setLocationRelativeTo(MainAplicacion.this);
                        ventanaAcercaDelSistema.setExtendedState(JFrame.NORMAL);
                    }
                    ventanaAcercaDelSistema.toFront();
                }
                return null;
            }
        };

        worker.execute();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainAplicacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
