package Clases.Interfaz;
import Clases.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JOptionPane;

/**
 *
 * @author Grupo 1
 */
public class PagoTC extends javax.swing.JPanel {

    private MainAplicacion mainFrame; // Referencia al frame main de la aplicación
    
    /**
     * Crea el nuevo panel PagoTC
     */
    public PagoTC(MainAplicacion mainFrame) {
        initComponents();  
        this.mainFrame = mainFrame;
        
        // Agregar un listener de componentes para detectar cuando se muestra el panel
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {
                // Llamar a actualizarMontos cuando se muestra el panel
                actualizarMontos();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSiguiente = new javax.swing.JButton();
        campoMontoAbonar = new javax.swing.JTextField();
        labelTitulo = new javax.swing.JLabel();
        labelTarjeta = new javax.swing.JLabel();
        labelMontoAbonar = new javax.swing.JLabel();
        labelTotalAPagar = new javax.swing.JLabel();
        datoMontoAPagar = new javax.swing.JLabel();
        labelPagoMinimo = new javax.swing.JLabel();
        datoMontoPagoMinimo = new javax.swing.JLabel();
        campolNroCuenta = new javax.swing.JTextField();

        botonSiguiente.setBackground(new java.awt.Color(250, 230, 150));
        botonSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonSiguiente.setText("Siguiente");
        botonSiguiente.setToolTipText("");
        botonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteActionPerformed(evt);
            }
        });

        campoMontoAbonar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoMontoAbonar.setToolTipText("");
        campoMontoAbonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoMontoAbonarActionPerformed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        labelTitulo.setText("Pago de Tarjeta de Credito");

        labelTarjeta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTarjeta.setText("Nº de Cuenta");

        labelMontoAbonar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelMontoAbonar.setText("Monto a Abonar (Gs.)");

        labelTotalAPagar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTotalAPagar.setText("Total a Pagar");

        datoMontoAPagar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        datoMontoAPagar.setForeground(new java.awt.Color(255, 0, 0));
        datoMontoAPagar.setText("---.---.---.-- Gs.");
        datoMontoAPagar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelPagoMinimo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelPagoMinimo.setText("Pago Minimo");

        datoMontoPagoMinimo.setText("---.---.-- Gs.");
        datoMontoPagoMinimo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        campolNroCuenta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campolNroCuentaFocusLost(evt);
            }
        });
        campolNroCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campolNroCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPagoMinimo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelTotalAPagar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelMontoAbonar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelTarjeta, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campolNroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(datoMontoAPagar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addComponent(campoMontoAbonar))
                    .addComponent(datoMontoPagoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(labelTitulo)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(labelTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTarjeta)
                    .addComponent(campolNroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotalAPagar)
                    .addComponent(datoMontoAPagar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPagoMinimo)
                    .addComponent(datoMontoPagoMinimo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoMontoAbonar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMontoAbonar))
                .addGap(18, 18, 18)
                .addComponent(botonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void campoMontoAbonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoMontoAbonarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoMontoAbonarActionPerformed

    private void botonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteActionPerformed
        if(campoMontoAbonar.getText().matches("-?\\d+") && campolNroCuenta.getText().matches("-?\\d+"))
        {
            Integer monto = Integer.valueOf(campoMontoAbonar.getText());
            Integer idCuenta = Integer.valueOf(campolNroCuenta.getText());
            if(monto > 0 && Sistema.obtenerObjetoCuenta(idCuenta) != null)
            {
                Cuenta cuenta = Sistema.obtenerObjetoCuenta(idCuenta);
                if(!(cuenta.getTarjeta() instanceof TarjetaCredito))
                {
                    JOptionPane.showMessageDialog(mainFrame, "Esta cuenta no es de credito!", "Error",  JOptionPane.ERROR_MESSAGE);
                }
                TarjetaCredito tarjeta = (TarjetaCredito)cuenta.getTarjeta();
                int pagoMinimo = tarjeta.getSaldoPendiente() < tarjeta.getPagoMinimo() 
                                    ? tarjeta.getSaldoPendiente() : tarjeta.getPagoMinimo();
                if (monto < pagoMinimo) {
                    JOptionPane.showMessageDialog(mainFrame, 
                            "Debes abonar por lo menos el pago minimo!", "Error",  JOptionPane.ERROR_MESSAGE);
                }
                else if (tarjeta.getSaldoPendiente() - monto < 0) {
                    JOptionPane.showMessageDialog(mainFrame, 
                            "No puedes pagar mas del total a pagar requerido!", "Error",  JOptionPane.ERROR_MESSAGE);
                }
                // Si no hay errores, solicitar el pin de transaccion y realizar el pago de tarjeta de credito
                else {
                    boolean cerradoForzado = mainFrame.mostrarSolicitudDePinDeTransaccion();
                    if (!cerradoForzado){
                        System.out.println("Pagando monto: " + monto);
                        Sistema.pagarTarjetaCredito(mainFrame.getCuenta().getID(), idCuenta, monto);
                        actualizarMontos();
                    }      
                }
            }
            else {
                MensajeFracasoOperacion fr = new MensajeFracasoOperacion(mainFrame, true);
                fr.setVisible(true);       
            }         
        }
    }//GEN-LAST:event_botonSiguienteActionPerformed

    private void campolNroCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campolNroCuentaActionPerformed
        actualizarMontos();
    }//GEN-LAST:event_campolNroCuentaActionPerformed

    private void campolNroCuentaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campolNroCuentaFocusLost
        actualizarMontos();
    }//GEN-LAST:event_campolNroCuentaFocusLost
    
    /**
     * Actualiza los montos a pagar y el pago minimo de la tarjeta de credito asociada a la cuenta. 
     */
    private void actualizarMontos() {
        if(campolNroCuenta.getText().matches("-?\\d+"))
        {
            Integer idCuenta = Integer.valueOf(campolNroCuenta.getText());
            Cuenta cuenta = Sistema.obtenerObjetoCuenta(idCuenta);          
            if(cuenta != null && cuenta.getTarjeta() instanceof TarjetaCredito)
            {
                TarjetaCredito tarjeta = (TarjetaCredito) cuenta.getTarjeta();
                int pagoMinimo = tarjeta.getSaldoPendiente() < tarjeta.getPagoMinimo() 
                                    ? tarjeta.getSaldoPendiente() : tarjeta.getPagoMinimo();
                
                // Formatear como moneda en guaranies. 
                DecimalFormatSymbols symbols = new DecimalFormatSymbols();
                symbols.setGroupingSeparator('.');
                DecimalFormat formatoDecimal = new DecimalFormat("###,###", symbols);
                
                String montoAPagarFormateado = formatoDecimal.format(tarjeta.getSaldoPendiente());
                String pagoMinimoFormateado = formatoDecimal.format(pagoMinimo);
                datoMontoAPagar.setText(montoAPagarFormateado);
                datoMontoPagoMinimo.setText(pagoMinimoFormateado);
            } 
            else {
                datoMontoAPagar.setText("---.---.---.--");
                datoMontoPagoMinimo.setText("---.---.--");
                JOptionPane.showMessageDialog(this, 
                        "Numero de Cuenta de Tarjeta Invalido!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            datoMontoAPagar.setText("---.---.---.--");
            datoMontoPagoMinimo.setText("---.---.--");
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JTextField campoMontoAbonar;
    private javax.swing.JTextField campolNroCuenta;
    private javax.swing.JLabel datoMontoAPagar;
    private javax.swing.JLabel datoMontoPagoMinimo;
    private javax.swing.JLabel labelMontoAbonar;
    private javax.swing.JLabel labelPagoMinimo;
    private javax.swing.JLabel labelTarjeta;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTotalAPagar;
    // End of variables declaration//GEN-END:variables
}
